/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { JobAuction, JobAuctionInterface } from "../JobAuction";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_jobOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AuctionClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "NewHighestBid",
    type: "event",
  },
  {
    inputs: [],
    name: "auctionActive",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "closeAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "highestBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "highestBidder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jobOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "placeBid",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610cd9380380610cd9833981810160405281019061003291906100f6565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360006101000a81548160ff02191690831515021790555050610123565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100c382610098565b9050919050565b6100d3816100b8565b81146100de57600080fd5b50565b6000815190506100f0816100ca565b92915050565b60006020828403121561010c5761010b610093565b5b600061011a848285016100e1565b91505092915050565b610ba7806101326000396000f3fe60806040526004361061007b5760003560e01c806391f901571161004e57806391f90157146101165780639222800614610141578063d57bde791461016c578063ecfc7ecc146101975761007b565b806302ac46f91461008057806312065fe0146100ab578063378252f2146100d657806368742da6146100ed575b600080fd5b34801561008c57600080fd5b506100956101a1565b6040516100a29190610717565b60405180910390f35b3480156100b757600080fd5b506100c06101c5565b6040516100cd919061074b565b60405180910390f35b3480156100e257600080fd5b506100eb6101cd565b005b3480156100f957600080fd5b50610114600480360381019061010f9190610797565b610339565b005b34801561012257600080fd5b5061012b6104aa565b6040516101389190610717565b60405180910390f35b34801561014d57600080fd5b506101566104d0565b60405161016391906107df565b60405180910390f35b34801561017857600080fd5b506101816104e3565b60405161018e919061074b565b60405180910390f35b61019f6104e9565b005b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600047905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102529061087d565b60405180910390fd5b600360009054906101000a900460ff166102aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a1906108e9565b60405180910390fd5b6000600360006101000a81548160ff021916908315150217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f1d78ca6377547e2f5434a04066a4dcac7670fd77e146b686b06bf8fbc06fb43560025460405161032f919061074b565b60405180910390a2565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103be9061097b565b60405180910390fd5b600360009054906101000a900460ff1615610417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040e906109e7565b60405180910390fd5b60004790506000811161045f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045690610a53565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156104a5573d6000803e3d6000fd5b505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900460ff1681565b60025481565b600360009054906101000a900460ff16610538576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052f90610abf565b60405180910390fd5b600254341161057c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057390610b51565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461063e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f1935050505015801561063c573d6000803e3d6000fd5b505b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346002819055503373ffffffffffffffffffffffffffffffffffffffff167fdeda60fb6e38f55d4ccab679f50f933d04b1dca8584775216dbdac46f251ca4a346040516106cc919061074b565b60405180910390a2565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610701826106d6565b9050919050565b610711816106f6565b82525050565b600060208201905061072c6000830184610708565b92915050565b6000819050919050565b61074581610732565b82525050565b6000602082019050610760600083018461073c565b92915050565b600080fd5b610774816106f6565b811461077f57600080fd5b50565b6000813590506107918161076b565b92915050565b6000602082840312156107ad576107ac610766565b5b60006107bb84828501610782565b91505092915050565b60008115159050919050565b6107d9816107c4565b82525050565b60006020820190506107f460008301846107d0565b92915050565b600082825260208201905092915050565b7f446f61722070726f70726965746172756c206a6f62756c756920706f6174652060008201527f696e6368696465206c6963697461746961210000000000000000000000000000602082015250565b60006108676032836107fa565b91506108728261080b565b604082019050919050565b600060208201905081810360008301526108968161085a565b9050919050565b7f4c696369746174696120657374652064656a6120696e63686973612100000000600082015250565b60006108d3601c836107fa565b91506108de8261089d565b602082019050919050565b60006020820190508181036000830152610902816108c6565b9050919050565b7f446f61722070726f70726965746172756c206a6f62756c756920706f6174652060008201527f7265747261676520666f6e647572696c65210000000000000000000000000000602082015250565b60006109656032836107fa565b915061097082610909565b604082019050919050565b6000602082019050818103600083015261099481610958565b9050919050565b7f4c6963697461746961206e75206573746520696e636869736121000000000000600082015250565b60006109d1601a836107fa565b91506109dc8261099b565b602082019050919050565b60006020820190508181036000830152610a00816109c4565b9050919050565b7f4e752065786973746120666f6e64757269206465207265747261732100000000600082015250565b6000610a3d601c836107fa565b9150610a4882610a07565b602082019050919050565b60006020820190508181036000830152610a6c81610a30565b9050919050565b7f4c696369746174696120732d6120696e63686569617421000000000000000000600082015250565b6000610aa96017836107fa565b9150610ab482610a73565b602082019050919050565b60006020820190508181036000830152610ad881610a9c565b9050919050565b7f4269642d756c20746175206e7520646570617365737465206269642d756c206360008201527f7572656e74210000000000000000000000000000000000000000000000000000602082015250565b6000610b3b6026836107fa565b9150610b4682610adf565b604082019050919050565b60006020820190508181036000830152610b6a81610b2e565b905091905056fea2646970667358221220458d892f88078bda6a29e5c7fbd2f15a0d3a1d4a5ec4e17d36281e20f174004a64736f6c634300081b0033";

type JobAuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JobAuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JobAuction__factory extends ContractFactory {
  constructor(...args: JobAuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _jobOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_jobOwner, overrides || {});
  }
  override deploy(
    _jobOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_jobOwner, overrides || {}) as Promise<
      JobAuction & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): JobAuction__factory {
    return super.connect(runner) as JobAuction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JobAuctionInterface {
    return new Interface(_abi) as JobAuctionInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): JobAuction {
    return new Contract(address, _abi, runner) as unknown as JobAuction;
  }
}
