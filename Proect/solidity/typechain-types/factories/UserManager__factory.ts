/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { UserManager, UserManagerInterface } from "../UserManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserLoggedIn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserLoggedOut",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "login",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "logout",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061051c8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631aa3a008146100515780631f3c99c31461005b578063b34e97e814610065578063c3c5a5471461006f575b600080fd5b61005961009f565b005b6100636101bb565b005b61006d6101f4565b005b61008960048036038101906100849190610370565b6102b8565b60405161009691906103b8565b60405180910390f35b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561012b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012290610430565b60405180910390fd5b60016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f54db7a5cb4735e1aac1f53db512d3390390bb6637bd30ad4bf9fc98667d9b9b9336040516101b1919061045f565b60405180910390a1565b7fc6ef449222bae3754898fc5fa944d52dfc53c0ee1fdd7d733fbb422ac5e2b8c8336040516101ea919061045f565b60405180910390a1565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661027f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610276906104c6565b60405180910390fd5b7f8d15fde878cff665868ed7579eb5081db6508d4249df61dcdd7699a5301d9874336040516102ae919061045f565b60405180910390a1565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061033d82610312565b9050919050565b61034d81610332565b811461035857600080fd5b50565b60008135905061036a81610344565b92915050565b6000602082840312156103865761038561030d565b5b60006103948482850161035b565b91505092915050565b60008115159050919050565b6103b28161039d565b82525050565b60006020820190506103cd60008301846103a9565b92915050565b600082825260208201905092915050565b7f5573657220616c72656164792072656769737465726564000000000000000000600082015250565b600061041a6017836103d3565b9150610425826103e4565b602082019050919050565b600060208201905081810360008301526104498161040d565b9050919050565b61045981610332565b82525050565b60006020820190506104746000830184610450565b92915050565b7f55736572206e6f74207265676973746572656400000000000000000000000000600082015250565b60006104b06013836103d3565b91506104bb8261047a565b602082019050919050565b600060208201905081810360008301526104df816104a3565b905091905056fea2646970667358221220fb536540762911c326dbf843096c2d403e2d834ea5161b3596da24066a33769464736f6c634300081b0033";

type UserManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UserManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UserManager__factory extends ContractFactory {
  constructor(...args: UserManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      UserManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): UserManager__factory {
    return super.connect(runner) as UserManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UserManagerInterface {
    return new Interface(_abi) as UserManagerInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): UserManager {
    return new Contract(address, _abi, runner) as unknown as UserManager;
  }
}
